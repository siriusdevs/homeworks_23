"""Тесты для функции generate_report."""
import pytest

from hw1 import generete_report

TEST_CASES_WITH_KEY_ARG = (
    (
        (
            ('Отдел продаж', [1000.0, 1000.0, 1000.0]),
            ('Отдел разработки', [5000.0, 5000.0, 5000.0]),
            ('Отдел аналитики', [6000.0, 5000.0, 6000.0]),
            ('Отдел маркетинга', [0, 0]),
            ('Отдел тестирования', [7000.9, 0, 9.7]),
        ),
        ('Отдел тестирования', 'Отдел маркетинга', 'Отдел аналитики'),
        (
            ['Отдел продаж', 'Отдел разработки'],
            ['Отдел разработки', 'Отдел продаж'],
        ),
    ),
    (
        (
            ('Отдел разработки', [10000, 20000, 30000]),
            ('Отдел тестирования', [5000, 1000, 100]),
            ('Отдел техподдержки', [50, 10, 5]),
        ),
        ('Отдел тестирования',),
        (
            ['Отдел техподдержки', 'Отдел разработки'],
            ['Отдел разработки', 'Отдел техподдержки'],
        ),
    ),
    (
        (
            ('Отдел управления', [8, 5, 16]),
            ('Отдел отделения', [999, 999, 999]),
        ),
        ('Отдел управления', 'Отдел отделения'),
        (
            [],
            [],
        ),
    ),
)

TEST_CASES_WITHOUT_KEY_ARG = (
    (
        (
            ('Отдел продаж', [1000.0, 1000.0, 1000.0]),
            ('Отдел разработки', [5000.0, 5000.0, 5000.0]),
            ('Отдел аналитики', [6000.0, 5000.0, 6000.0]),
            ('Отдел маркетинга', [0, 0]),
        ),
        (
            ['Отдел маркетинга', 'Отдел продаж', 'Отдел разработки'],
            ['Отдел аналитики', 'Отдел разработки', 'Отдел продаж'],
        ),
    ),
    (
        (('Отдел аналитики', [9999.5, 10000.5, 9999.5]),),
        (
            ['Отдел аналитики'],
            ['Отдел аналитики'],
        ),
    ),
)


@pytest.mark.parametrize('departments, expected', TEST_CASES_WITHOUT_KEY_ARG)
def test_get_report_without_key_args(departments, expected):
    """Функция, запускающая тестирование на наборе данных без именованного аргумента.

    Args:
        departments:
            tuple[str, list[float]] - кортеж, содержащий информацию об отделах компании
            и о зарплатах сотрудников этих отделов
        expected:
            tuple[list[str]]: ожидаемые результаты работы функции

    """
    assert generete_report(*departments) == expected


@pytest.mark.parametrize('departments, exceptions, expected', TEST_CASES_WITH_KEY_ARG)
def test_get_report_with_key_args(departments, exceptions, expected):
    """Функция, запускающая тестирование на наборе данных с именованным аргументом.

    Args:
        departments:
            tuple[str, list[float]] - кортеж, содержащий информацию об отделах компании
            и о зарплатах сотрудников этих отделов
        exceptions:
            set[str] - кортеж с названиями отделов,
            которые должны быть исключены из топа
        expected:
            tuple[list[str]] - ожидаемые результаты работы функции
    """
    assert generete_report(*departments, exceptions=exceptions) == expected
